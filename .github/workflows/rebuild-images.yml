name: Rebuild and Deploy Docker Images

on:
  workflow_dispatch:
    inputs:
      component:
        description: 'Component to rebuild'
        required: true
        default: 'both'
        type: choice
        options:
          - frontend
          - backend
          - both

jobs:
  build-and-upload:
    name: Build and Upload Images
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      
      - name: Create artifacts directory
        run: mkdir -p ./artifacts
      
      # Build backend image if selected
      - name: Build backend image
        if: github.event.inputs.component == 'backend' || github.event.inputs.component == 'both'
        run: |
          echo "Building backend image..."
          docker build -t ihsan/backend:latest -f Dockerfile.backend .
          docker save ihsan/backend:latest > ./artifacts/backend.tar
      
      # Build frontend image if selected
      - name: Build frontend image
        if: github.event.inputs.component == 'frontend' || github.event.inputs.component == 'both'
        run: |
          echo "Building frontend image..."
          docker build -t ihsan/frontend:latest -f Dockerfile.frontend .
          docker save ihsan/frontend:latest > ./artifacts/frontend.tar
      
      # List artifacts for verification
      - name: List artifacts
        run: ls -la ./artifacts/
      
      # Upload the built images to droplet
      - name: Upload Docker images
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.DROPLET_HOST }}
          username: ${{ secrets.DROPLET_USERNAME }}
          key: ${{ secrets.DROPLET_SSH_KEY }}
          source: "./artifacts/*.tar"
          target: "/opt/ihsan"
          strip_components: 1
      
      # Deploy only the updated images
      - name: Deploy images
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DROPLET_HOST }}
          username: ${{ secrets.DROPLET_USERNAME }}
          key: ${{ secrets.DROPLET_SSH_KEY }}
          script: |
            cd /opt/ihsan
            
            # Load and deploy backend if selected
            if [[ -f "backend.tar" && "${{ github.event.inputs.component }}" =~ ^(backend|both)$ ]]; then
              echo "Loading backend image..."
              docker load < backend.tar
              echo "Restarting backend container..."
              docker-compose -f docker-compose.prod.yml up -d --no-deps backend
              rm -f backend.tar
            fi
            
            # Load and deploy frontend if selected
            if [[ -f "frontend.tar" && "${{ github.event.inputs.component }}" =~ ^(frontend|both)$ ]]; then
              echo "Loading frontend image..."
              docker load < frontend.tar
              echo "Restarting frontend container..."
              docker-compose -f docker-compose.prod.yml up -d --no-deps frontend
              rm -f frontend.tar
            fi
            
            echo "Deployment complete!"